module adder (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);


        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,c1,p[7:4],g[7:4]),
				  ca2 (cout,c2,p[11:8],g[11:8]);

        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],c1,p[7:4],g[7:4]),
					  sa2 (s[11:8],c2,p[11:8],g[11:8]);
					  

endmodule





module approxadder2 (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);


        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]),
				  ca2 (cout,g[7],p[11:8],g[11:8]);

        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],c1,p[7:4],g[7:4]),
					  sa2 (s[11:8],c2,p[11:8],g[11:8]);
					  

endmodule
 
 
 module approxadder3 (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2,m1,m2;
		  wire pp1,pp2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);
        assign pp1=&(p[7:4]),
		         pp2=&(p[11:8]);

        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]),
				  ca2 (cout,g[7],p[11:8],g[11:8]);
        mux mu1 (m1,c1,g[3],pp1),
		      mu2 (m2,c2,g[7],pp2);  
		  
        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],m1,p[7:4],g[7:4]),
					  sa2 (s[11:8],m2,p[11:8],g[11:8]);
					  

endmodule
 module approxadder4 (output [11:0] s,output cout, input [12:0] a,b, input c0);
        wire [12:0] p,g;
		  wire c1,c2,m1;
		  wire pp1;
		      assign a[12]=1'b0,
				       b[12]=1'b0;
				
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]);
						
						
		generator5 pg2 (p[12:8],g[12:8],a[12:8],b[12:8]);
				
				
        assign pp1=&(p[7:4]);

        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]);
				  
				  
        mux mu1 (m1,c1,g[3],pp1); 
		  
        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],m1,p[7:4],g[7:4]);
			subadder_carry	 sa2 (cout ,s[11:8],c2,p[12:8],g[12:8]);
					  

endmodule


 module approxadder_sign (output [11:0] s,output csign, input [12:0] a,b, input c0);
        wire [12:0] p,g;
		  wire [11:0] s1;
		  wire c1,c2,m1,csign1;
		  wire pp0,pp1,pp2;
		  wire [2:0] cs,sp;
		      assign a[12]=1'b0,
				       b[12]=1'b0;
				
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]);
						
						
		generator5 pg2 (p[12:8],g[12:8],a[12:8],b[12:8]);
				
				
        assign pp0=&(p[3:0]),
		         pp1=&(p[7:4]),
		         pp2=&(p[12:8]);

        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]);
				  
				  
        mux mu1 (m1,c1,g[3],pp1); 
		  
        subadder sa0 (s1[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s1[7:4],m1,p[7:4],g[7:4]);
			subadder_carry	 sa2 (csign1 ,s1[11:8],c2,p[12:8],g[12:8]);
			 
			 assign sp[0]=pp2&&pp1&&pp0&&c0,
			        sp[1]=pp2&&pp1&&c1,
					  sp[2]=pp2&&c2;
			assign cs[0]=sp[2]||sp[1]||sp[0],
			       cs[1]=sp[2]||sp[1],
			       cs[2]=sp[2];
			assign csign=cs[2]||csign1;
			assign s[3:0]=s1[3:0];
			       s[4]=s1[4]&&!(cs[1]),
					 s[5]=s1[5]&&!(cs[1]),
					 s[6]=s1[6]&&!(cs[1]),
					 s[7]=s1[7]&&!(cs[1]),
					 s[8]=s1[8]&&!(cs[2]),
					 s[9]=s1[9]&&!(cs[2]),
					 s[10]=s1[10]&&!(cs[2]),
					 s[11]=s1[11]&&!(cs[2]);
					  

endmodule

