module adder (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);


        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,c1,p[7:4],g[7:4]),
				  ca2 (cout,c2,p[11:8],g[11:8]);

        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],c1,p[7:4],g[7:4]),
					  sa2 (s[11:8],c2,p[11:8],g[11:8]);
					  

endmodule





module approxadder2 (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);


        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]),
				  ca2 (cout,g[7],p[11:8],g[11:8]);

        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],c1,p[7:4],g[7:4]),
					  sa2 (s[11:8],c2,p[11:8],g[11:8]);
					  

endmodule
 
 
 module approxadder3 (output [11:0] s,output cout, input [11:0] a,b, input c0);
        wire [11:0] p,g;
		  wire c1,c2,m1,m2;
		  wire pp1,pp2;
		      
        generator pg0 (p[3:0],g[3:0],a[3:0],b[3:0]),
		            pg1 (p[7:4],g[7:4],a[7:4],b[7:4]),
						pg2 (p[11:8],g[11:8],a[11:8],b[11:8]);
        assign pp1=&(p[7:4]),
		         pp2=&(p[11:8]);

        carry ca0 (c1,c0,p[3:0],g[3:0]),
		        ca1 (c2,g[3],p[7:4],g[7:4]),
				  ca2 (cout,g[7],p[11:8],g[11:8]);
        mux mu1 (m1,c1,g[3],pp1),
		      mu2 (m2,c2,g[7],pp2);  
		  
        subadder sa0 (s[3:0],c0,p[3:0],g[3:0]),
		           sa1 (s[7:4],m1,p[7:4],g[7:4]),
					  sa2 (s[11:8],m2,p[11:8],g[11:8]);
					  

endmodule
